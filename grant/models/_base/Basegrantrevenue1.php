<?php

/**
 * This is the model base class for the table "{{tuk_research_grant_revenue1}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "grantrevenue1".
 *
 * Columns in table "{{tuk_research_grant_revenue1}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $project_code
 * @property string $source
 * @property string $amount
 * @property string $date
 * @property string $currency
 *
 */
abstract class Basegrantrevenue1 extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{tuk_research_grant_revenue}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'grantrevenue1|grantrevenue1s', $n);
	}

	public static function representingColumn() {
		return 'source';
	}

	public function rules() {
		return array(
			array('project_code,source, amount', 'required'),
			array('project_code, source, amount', 'length', 'max'=>100),
			array('date, currency', 'length', 'max'=>30),
			array('project_code, date, currency', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, project_code, source, amount, date, currency', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'project_code' => Yii::t('app', ''),
			'source' => Yii::t('app', 'Source Description'),
			'amount' => Yii::t('app', 'Amount'),
			'date' => Yii::t('app', 'Date'),
			'currency' => Yii::t('app', 'Currency'),
		);
	}

	/*public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('project_code', $this->project_code, true);
		$criteria->compare('source', $this->source, true);
		$criteria->compare('amount', $this->amount, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('currency', $this->currency, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}*/

	public function search($params = array()) {
    $criteria = new CDbCriteria;

    if (!empty($params['project_code'])) {
        $criteria->compare('project_code', $params['project_code']);
    }

    return new CActiveDataProvider($this, array(
        'criteria' => $criteria,
        'sort' => array(
            'defaultOrder' => 'project_code ASC',
        ),
    ));
}

}